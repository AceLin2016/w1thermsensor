{
  "name": "W1thermsensor",
  "tagline": "Python package and CLI tool to work with w1 temperature sensors like DS1822, DS18S20 & DS18B20 on the Raspbery Pi, Beagle Bone and similar devices.",
  "body": "# W1ThermSensor\r\n[![Gitter](https://badges.gitter.im/Join Chat.svg)](https://gitter.im/timofurrer/w1thermsensor?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\r\n> This little pure python module provides a single class to get the temperature of a w1 therm sensor<br>\r\n> It can be easily used on are Rasperry Pi, Beagle Bone etc. over the GPIO interface.\r\n\r\n***\r\n\r\n[![Build Status](https://travis-ci.org/timofurrer/w1thermsensor.svg?branch=master)](https://travis-ci.org/timofurrer/w1thermsensor) [![codecov.io](http://codecov.io/github/timofurrer/w1thermsensor/coverage.svg?branch=master)](http://codecov.io/github/timofurrer/w1thermsensor?branch=master) [![Code Climate](https://codeclimate.com/github/timofurrer/w1thermsensor/badges/gpa.svg)](https://codeclimate.com/github/timofurrer/w1thermsensor)  [![Code Health](https://landscape.io/github/timofurrer/w1thermsensor/master/landscape.svg?style=flat)](https://landscape.io/github/timofurrer/w1thermsensor/master) [![PyPI version](https://badge.fury.io/py/w1thermsensor.svg)](https://badge.fury.io/py/w1thermsensor) [![PyPI](https://img.shields.io/pypi/dm/w1thermsensor.svg)]()\r\n\r\n**Author**: Timo Furrer <tuxtimo@gmail.com><br>\r\n**Version**: 0.3.0 <br>\r\n**License**: MIT\r\n\r\n**New:** use [w1thermsensor as a CLI tool](#usage-as-cli-tool)! - Since version *0.3.0*\r\n\r\n## Supported devices\r\n\r\nThe following w1 therm sensor devices are supported:\r\n\r\n* DS18S20\r\n* DS1822\r\n* DS18B20\r\n* DS28EA00\r\n* DS1825/MAX31850K\r\n\r\n## Setup\r\n\r\nYou just need a w1 therm sensor. <br>\r\nSome of them can be bought here: [Adafruit: DS18B20](https://www.adafruit.com/search?q=DS18B20) <br>\r\nI've used a Raspberry Pi with an GPIO Breakout (Pi Cobbler). Other hardware like the Beagle Bone are supported, too.\r\n\r\n## Installation\r\n\r\n### From PIP\r\n\r\nThis possibility is supported on all distribution:\r\n\r\n    pip install w1thermsensor\r\n\r\n*Note: maybe root privileges are required*\r\n\r\n### On Raspbian using apt-get\r\n\r\nIf you are using the `w1thermsensor` module on a Rasperry Pi running raspbian you can install it from the offical repository:\r\n\r\n```bash\r\nsudo apt-get install python-w1thermsensor\r\n```\r\n\r\nOr if you are using python 3:\r\n\r\n```bash\r\nsudo apt-get install python3-w1thermsensor\r\n```\r\n\r\n### Create debian packages\r\n\r\nFor python 2:\r\n\r\n    python setup.py --command-packages=stdeb.command bdist_deb\r\n\r\nFor python 3:\r\n\r\n    python3 setup.py --command-packages=stdeb.command bdist_deb\r\n\r\n### From Source\r\n\r\n    git clone https://github.com/timofurrer/w1thermsensor.git && cd w1thermsensor\r\n    python setup.py install\r\n\r\n*Note: maybe root privileges are required*\r\n\r\n## Usage as python package\r\n\r\nThe usage is very simple and the interface clean..\r\nAll examples are with the `DS18B20` sensor - It works the same way for the other supported devices.\r\n\r\n### Basic usage with one sensor (implicit)\r\n\r\n```python\r\nfrom w1thermsensor import W1ThermSensor\r\n\r\nsensor = W1ThermSensor()\r\ntemperature_in_celsius = sensor.get_temperature()\r\ntemperature_in_fahrenheit = sensor.get_temperature(W1ThermSensor.DEGREES_F)\r\ntemperature_in_all_units = sensor.get_temperatures([W1ThermSensor.DEGREES_C, W1ThermSensor.DEGREES_F, W1ThermSensor.KELVIN])\r\n```\r\n\r\nThe need kernel modules will be automatically loaded in the constructor of the `W1ThermSensor` class. <br>\r\nIf something went wrong an exception is raised.\r\n\r\n*The first found sensor will be taken*\r\n\r\n### Basic usage with one sensor (explicit)\r\n\r\nThe DS18B20 sensor with the ID `00000588806a` will be taken.\r\n\r\n```python\r\nfrom w1thermsensor import W1ThermSensor\r\n\r\nsensor = W1ThermSensor(W1ThermSensor.THERM_SENSOR_DS18B20, \"00000588806a\")\r\ntemperature_in_celsius = sensor.get_temperature()\r\n```\r\n\r\n### Multiple sensors\r\n\r\nWith the `get_available_sensors` class-method you can get the ids of all available sensors.\r\n\r\n```python\r\nfrom w1thermsensor import W1ThermSensor\r\n\r\nfor sensor in W1ThermSensor.get_available_sensors():\r\n    print(\"Sensor %s has temperature %.2f\" % (sensor.id, sensor.get_temperature()))\r\n```\r\n\r\nOnly sensors of a specific therm sensor type:\r\n\r\n```python\r\nfrom w1thermsensor import W1ThermSensor\r\n\r\nfor sensor in W1ThermSensor.get_available_sensors([W1ThermSensor.THERM_SENSOR_DS18B20]):\r\n    print(\"Sensor %s has temperature %.2f\" % (sensor.id, sensor.get_temperature()))\r\n```\r\n\r\n## Usage as CLI tool\r\n\r\nThe w1thermsensor module can be used as CLI tool since version `0.3.0`.\r\n\r\n### List sensors\r\n\r\nList all available sensors:\r\n\r\n```\r\n$ w1thermsensor ls\r\n$ w1thermsensor ls --json  # show results in JSON format\r\n```\r\n\r\nList only sensors of a specific type:\r\n\r\n```\r\n$ w1thermsensor ls --type DS1822\r\n$ w1thermsensor ls --type DS1822 --type MAX31850K  # specify multiple sensor types\r\n$ w1thermsensor ls --type DS1822 --json  # show results in JSON format\r\n```\r\n\r\n### Show temperatures\r\n\r\nShow temperature of all available sensors: (Same synopsis as `ls`)\r\n\r\n```\r\n$ w1thermsensor all --type DS1822\r\n$ w1thermsensor all --type DS1822 --type MAX31850K  # specify multiple sensor types\r\n$ w1thermsensor all --type DS1822 --json  # show results in JSON format\r\n```\r\n\r\nShow temperature of a single sensor:\r\n\r\n```\r\n$ w1thermsensor get 1  # 1 is the id obtained by the ls command\r\n$ w1thermsensor get --hwid 00000588806a --type DS18B20\r\n$ w1thermsensor get 1  # show results in JSON format\r\n```\r\n\r\n## Contribution\r\n\r\nFeel free to contribute!\r\nIf you have made any changes and you want to make a `pull request`:\r\n\r\n1. You are a **pro** to contribute to this repo!\r\n2. Please make the tests pass by `make tests`\r\n3. Now you can make the `pull request`\r\n4. Catch my thank!\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}